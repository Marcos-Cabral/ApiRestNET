// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NETChallenge.Data;

#nullable disable

namespace challenge.Migrations
{
    [DbContext(typeof(ContextDB))]
    partial class ContextDBModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NETChallenge.Models.Accion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("decimal(14,2)");

                    b.Property<string>("Ticker")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Accion");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Apple",
                            PrecioUnitario = 177.97m,
                            Ticker = "AAPL"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Alphabet Inc",
                            PrecioUnitario = 138.21m,
                            Ticker = "GOOGL"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Microsoft",
                            PrecioUnitario = 329.04m,
                            Ticker = "MSFT"
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Coca Cola",
                            PrecioUnitario = 58.3m,
                            Ticker = "KO"
                        },
                        new
                        {
                            Id = 5,
                            Nombre = "Walmart",
                            PrecioUnitario = 163.42m,
                            Ticker = "WMT"
                        });
                });

            modelBuilder.Entity("NETChallenge.Models.Auditoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("Tabla")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TipoOperacionAuditoriaId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipoOperacionAuditoriaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Auditoria");
                });

            modelBuilder.Entity("NETChallenge.Models.EstadoOrdenDeInversion", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("EstadoOrdenDeInversion");

                    b.HasData(
                        new
                        {
                            Id = 0,
                            Descripcion = "En Proceso"
                        },
                        new
                        {
                            Id = 1,
                            Descripcion = "Ejecutada"
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "Cancelada"
                        });
                });

            modelBuilder.Entity("NETChallenge.Models.OrdenDeInversion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccionId")
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("CuentaId")
                        .HasColumnType("int");

                    b.Property<int>("EstadoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("MontoTotal")
                        .HasColumnType("decimal(14,2)");

                    b.Property<int>("OrdenDeInversionOperacionId")
                        .HasColumnType("int");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(14,2)");

                    b.Property<int>("TipoDeActivoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccionId");

                    b.HasIndex("EstadoId");

                    b.HasIndex("OrdenDeInversionOperacionId");

                    b.HasIndex("TipoDeActivoId");

                    b.ToTable("OrdenDeInversion");
                });

            modelBuilder.Entity("NETChallenge.Models.OrdenDeInversionOperacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Identificador")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("Id");

                    b.ToTable("OrdenDeInversionOperacion");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Identificador = "C"
                        },
                        new
                        {
                            Id = 2,
                            Identificador = "V"
                        });
                });

            modelBuilder.Entity("NETChallenge.Models.TipoDeActivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.ToTable("TipoDeActivo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "FCI"
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Acción"
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "Bono"
                        });
                });

            modelBuilder.Entity("NETChallenge.Models.TipoOperacionAuditoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TipoOperacionAuditoria");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Alta"
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Baja"
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "Modificacion"
                        });
                });

            modelBuilder.Entity("challenge.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuario");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Contraseña = "AGecY2IjNhzArzIUZR2ZRSBZv8eFtVrBitRMWZ27zq1YdxyHPp986NyoDPjX+kussQ==",
                            NombreUsuario = "admin"
                        });
                });

            modelBuilder.Entity("NETChallenge.Models.Auditoria", b =>
                {
                    b.HasOne("NETChallenge.Models.TipoOperacionAuditoria", "TipoOperacionAuditoria")
                        .WithMany("Auditorias")
                        .HasForeignKey("TipoOperacionAuditoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("challenge.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoOperacionAuditoria");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("NETChallenge.Models.OrdenDeInversion", b =>
                {
                    b.HasOne("NETChallenge.Models.Accion", "Accion")
                        .WithMany()
                        .HasForeignKey("AccionId");

                    b.HasOne("NETChallenge.Models.EstadoOrdenDeInversion", "Estado")
                        .WithMany("OrdenDeInversiones")
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NETChallenge.Models.OrdenDeInversionOperacion", "OrdenDeInversionOperacion")
                        .WithMany("OrdenDeInversiones")
                        .HasForeignKey("OrdenDeInversionOperacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NETChallenge.Models.TipoDeActivo", "TipoDeActivo")
                        .WithMany("OrdenDeInversiones")
                        .HasForeignKey("TipoDeActivoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Accion");

                    b.Navigation("Estado");

                    b.Navigation("OrdenDeInversionOperacion");

                    b.Navigation("TipoDeActivo");
                });

            modelBuilder.Entity("NETChallenge.Models.EstadoOrdenDeInversion", b =>
                {
                    b.Navigation("OrdenDeInversiones");
                });

            modelBuilder.Entity("NETChallenge.Models.OrdenDeInversionOperacion", b =>
                {
                    b.Navigation("OrdenDeInversiones");
                });

            modelBuilder.Entity("NETChallenge.Models.TipoDeActivo", b =>
                {
                    b.Navigation("OrdenDeInversiones");
                });

            modelBuilder.Entity("NETChallenge.Models.TipoOperacionAuditoria", b =>
                {
                    b.Navigation("Auditorias");
                });
#pragma warning restore 612, 618
        }
    }
}
